There is a file where every line is a word or concatenated word. First, I need to parse
 the file and get a collection of Strings. The order is not significant, operations will be insert
 and select (not at index), so I should use LinkedList.

I need to count all concatenated words, so I probably will have to clone this collection
 and have ~n^2 compare operations. While iterating, I should check is this word is concatenated.
 If it is, I should put it in a separate collection. I shall also save 2 longest concatenated words in it.

One string can be concatenated with many different strings, so I should count only unique strings.
 Set is a good collection for this purposes.

The output - total amount of concatenated words + longest and second longest words are written through log4j logger into console. If needed,
 logger can be set to output date into a file.

And then I noticed...
 Note section.......

So I have to find all unique words (not-concatenated). Take a list of all words, delete all unique words
 and recursively go through every word. If potentially concatenated word fully composed with words from
 the list of unique words - then it is concatenated.

It took additional 20 minutes to realize the problem and change a solution.
The total time of work was 3hours 15minutes

So all together there are 9255 of concatenated words.
 The longest is "antiauthoritarianisms" (21 symb) and second longest is "multidimensionalities" (21 symb).
 If we consider only words with different length, then second longest is "antifluoridationist" (19 symb).
 The run took 166 seconds on my machine.